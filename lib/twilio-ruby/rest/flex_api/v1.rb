##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

module Twilio
  module REST
    class FlexApi
      class V1 < Version
        ##
        # Initialize the V1 version of FlexApi
        def initialize(domain)
          super
          @version = 'v1'
          @channel = nil
          @configuration = nil
          @flex_flow = nil
          @web_channel = nil
        end

        ##
        # @param [String] sid The SID of the Flex chat channel resource to fetch.
        # @return [Twilio::REST::Flex_api::V1::ChannelContext] if sid was passed.
        # @return [Twilio::REST::Flex_api::V1::ChannelList]
        def channel(sid=:unset)
          if sid.nil?
            raise ArgumentError, 'sid cannot be nil'
          elsif sid == :unset
            @channel ||= ChannelList.new self
          else
            ChannelContext.new(self, sid)
          end
        end

        ##
        # @return [Twilio::REST::Flex_api::V1::ConfigurationContext]
        def configuration
          @configuration ||= ConfigurationContext.new self
        end

        ##
        # @param [String] sid The SID of the FlexFlow resource to fetch.
        # @return [Twilio::REST::Flex_api::V1::FlexFlowContext] if sid was passed.
        # @return [Twilio::REST::Flex_api::V1::FlexFlowList]
        def flex_flow(sid=:unset)
          if sid.nil?
            raise ArgumentError, 'sid cannot be nil'
          elsif sid == :unset
            @flex_flow ||= FlexFlowList.new self
          else
            FlexFlowContext.new(self, sid)
          end
        end

        ##
        # @param [String] sid The SID of the WebChannel resource to fetch.
        # @return [Twilio::REST::Flex_api::V1::WebChannelContext] if sid was passed.
        # @return [Twilio::REST::Flex_api::V1::WebChannelList]
        def web_channel(sid=:unset)
          if sid.nil?
            raise ArgumentError, 'sid cannot be nil'
          elsif sid == :unset
            @web_channel ||= WebChannelList.new self
          else
            WebChannelContext.new(self, sid)
          end
        end

        ##
        # Provide a user friendly representation
        def to_s
          '<Twilio::REST::FlexApi::V1>'
        end
      end
    end
  end
end