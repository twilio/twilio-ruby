##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

module Twilio
  module REST
    class FlexApi < Domain
      class V1 < Version
        ##
        # PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
        class InsightsConversationsList < ListResource
          ##
          # Initialize the InsightsConversationsList
          # @param [Version] version Version that contains the resource
          # @return [InsightsConversationsList] InsightsConversationsList
          def initialize(version)
            super(version)

            # Path Solution
            @solution = {}
            @uri = "/Insights/Conversations"
          end

          ##
          # Lists InsightsConversationsInstance records from the API as a list.
          # Unlike stream(), this operation is eager and will load `limit` records into
          # memory before returning.
          # @param [String] segment_id Unique Id of the segment for which conversation
          #   details needs to be fetched
          # @param [String] token The Token HTTP request header
          # @param [Integer] limit Upper limit for the number of records to return. stream()
          #    guarantees to never return more than limit.  Default is no limit
          # @param [Integer] page_size Number of records to fetch per request, when
          #    not set will use the default value of 50 records.  If no page_size is defined
          #    but a limit is defined, stream() will attempt to read the limit with the most
          #    efficient page size, i.e. min(limit, 1000)
          # @return [Array] Array of up to limit results
          def list(segment_id: :unset, token: :unset, limit: nil, page_size: nil)
            self.stream(segment_id: segment_id, token: token, limit: limit, page_size: page_size).entries
          end

          ##
          # Streams InsightsConversationsInstance records from the API as an Enumerable.
          # This operation lazily loads records as efficiently as possible until the limit
          # is reached.
          # @param [String] segment_id Unique Id of the segment for which conversation
          #   details needs to be fetched
          # @param [String] token The Token HTTP request header
          # @param [Integer] limit Upper limit for the number of records to return. stream()
          #    guarantees to never return more than limit. Default is no limit.
          # @param [Integer] page_size Number of records to fetch per request, when
          #    not set will use the default value of 50 records. If no page_size is defined
          #    but a limit is defined, stream() will attempt to read the limit with the most
          #    efficient page size, i.e. min(limit, 1000)
          # @return [Enumerable] Enumerable that will yield up to limit results
          def stream(segment_id: :unset, token: :unset, limit: nil, page_size: nil)
            limits = @version.read_limits(limit, page_size)

            page = self.page(segment_id: segment_id, token: token, page_size: limits[:page_size], )

            @version.stream(page, limit: limits[:limit], page_limit: limits[:page_limit])
          end

          ##
          # When passed a block, yields InsightsConversationsInstance records from the API.
          # This operation lazily loads records as efficiently as possible until the limit
          # is reached.
          def each
            limits = @version.read_limits

            page = self.page(page_size: limits[:page_size], )

            @version.stream(page,
                            limit: limits[:limit],
                            page_limit: limits[:page_limit]).each {|x| yield x}
          end

          ##
          # Retrieve a single page of InsightsConversationsInstance records from the API.
          # Request is executed immediately.
          # @param [String] segment_id Unique Id of the segment for which conversation
          #   details needs to be fetched
          # @param [String] token The Token HTTP request header
          # @param [String] page_token PageToken provided by the API
          # @param [Integer] page_number Page Number, this value is simply for client state
          # @param [Integer] page_size Number of records to return, defaults to 50
          # @return [Page] Page of InsightsConversationsInstance
          def page(segment_id: :unset, token: :unset, page_token: :unset, page_number: :unset, page_size: :unset)
            params = Twilio::Values.of({
                'SegmentId' => segment_id,
                'PageToken' => page_token,
                'Page' => page_number,
                'PageSize' => page_size,
            })
            headers = Twilio::Values.of({'Token' => token, })

            response = @version.page('GET', @uri, params: params, headers: headers)

            InsightsConversationsPage.new(@version, response, @solution)
          end

          ##
          # Retrieve a single page of InsightsConversationsInstance records from the API.
          # Request is executed immediately.
          # @param [String] target_url API-generated URL for the requested results page
          # @return [Page] Page of InsightsConversationsInstance
          def get_page(target_url)
            response = @version.domain.request(
                'GET',
                target_url
            )
            InsightsConversationsPage.new(@version, response, @solution)
          end

          ##
          # Provide a user friendly representation
          def to_s
            '#<Twilio.FlexApi.V1.InsightsConversationsList>'
          end
        end

        ##
        # PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
        class InsightsConversationsPage < Page
          ##
          # Initialize the InsightsConversationsPage
          # @param [Version] version Version that contains the resource
          # @param [Response] response Response from the API
          # @param [Hash] solution Path solution for the resource
          # @return [InsightsConversationsPage] InsightsConversationsPage
          def initialize(version, response, solution)
            super(version, response)

            # Path Solution
            @solution = solution
          end

          ##
          # Build an instance of InsightsConversationsInstance
          # @param [Hash] payload Payload response from the API
          # @return [InsightsConversationsInstance] InsightsConversationsInstance
          def get_instance(payload)
            InsightsConversationsInstance.new(@version, payload, )
          end

          ##
          # Provide a user friendly representation
          def to_s
            '<Twilio.FlexApi.V1.InsightsConversationsPage>'
          end
        end

        ##
        # PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
        class InsightsConversationsInstance < InstanceResource
          ##
          # Initialize the InsightsConversationsInstance
          # @param [Version] version Version that contains the resource
          # @param [Hash] payload payload that contains response from Twilio
          # @return [InsightsConversationsInstance] InsightsConversationsInstance
          def initialize(version, payload)
            super(version)

            # Marshaled Properties
            @properties = {
                'account_id' => payload['account_id'],
                'conversation_id' => payload['conversation_id'],
                'segment_count' => payload['segment_count'] == nil ? payload['segment_count'] : payload['segment_count'].to_i,
                'segments' => payload['segments'],
            }
          end

          ##
          # @return [String] The account id
          def account_id
            @properties['account_id']
          end

          ##
          # @return [String] Unique conversation Id
          def conversation_id
            @properties['conversation_id']
          end

          ##
          # @return [String] The segment count
          def segment_count
            @properties['segment_count']
          end

          ##
          # @return [Array[Hash]] The conversation segments
          def segments
            @properties['segments']
          end

          ##
          # Provide a user friendly representation
          def to_s
            "<Twilio.FlexApi.V1.InsightsConversationsInstance>"
          end

          ##
          # Provide a detailed, user friendly representation
          def inspect
            "<Twilio.FlexApi.V1.InsightsConversationsInstance>"
          end
        end
      end
    end
  end
end