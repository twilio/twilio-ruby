##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

module Twilio
  module REST
    class Preview < Domain
      class TrustedComms < Version
        class BusinessContext < InstanceContext
          ##
          # PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
          class BrandList < ListResource
            ##
            # Initialize the BrandList
            # @param [Version] version Version that contains the resource
            # @param [String] business_sid The unique SID identifier of the Business.
            # @return [BrandList] BrandList
            def initialize(version, business_sid: nil)
              super(version)

              # Path Solution
              @solution = {business_sid: business_sid}
            end

            ##
            # Provide a user friendly representation
            def to_s
              '#<Twilio.Preview.TrustedComms.BrandList>'
            end
          end

          ##
          # PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
          class BrandPage < Page
            ##
            # Initialize the BrandPage
            # @param [Version] version Version that contains the resource
            # @param [Response] response Response from the API
            # @param [Hash] solution Path solution for the resource
            # @return [BrandPage] BrandPage
            def initialize(version, response, solution)
              super(version, response)

              # Path Solution
              @solution = solution
            end

            ##
            # Build an instance of BrandInstance
            # @param [Hash] payload Payload response from the API
            # @return [BrandInstance] BrandInstance
            def get_instance(payload)
              BrandInstance.new(@version, payload, business_sid: @solution[:business_sid], )
            end

            ##
            # Provide a user friendly representation
            def to_s
              '<Twilio.Preview.TrustedComms.BrandPage>'
            end
          end

          ##
          # PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
          class BrandContext < InstanceContext
            ##
            # Initialize the BrandContext
            # @param [Version] version Version that contains the resource
            # @param [String] business_sid The unique SID identifier of the Business.
            # @param [String] sid The unique SID identifier of the Brand.
            # @return [BrandContext] BrandContext
            def initialize(version, business_sid, sid)
              super(version)

              # Path Solution
              @solution = {business_sid: business_sid, sid: sid, }
              @uri = "/Businesses/#{@solution[:business_sid]}/Brands/#{@solution[:sid]}"

              # Dependents
              @branded_channels = nil
            end

            ##
            # Fetch the BrandInstance
            # @return [BrandInstance] Fetched BrandInstance
            def fetch
              payload = @version.fetch('GET', @uri)

              BrandInstance.new(@version, payload, business_sid: @solution[:business_sid], sid: @solution[:sid], )
            end

            ##
            # Access the branded_channels
            # @return [BrandedChannelList]
            # @return [BrandedChannelContext] if sid was passed.
            def branded_channels(sid=:unset)
              raise ArgumentError, 'sid cannot be nil' if sid.nil?

              if sid != :unset
                return BrandedChannelContext.new(@version, @solution[:business_sid], @solution[:sid], sid, )
              end

              unless @branded_channels
                @branded_channels = BrandedChannelList.new(
                    @version,
                    business_sid: @solution[:business_sid],
                    brand_sid: @solution[:sid],
                )
              end

              @branded_channels
            end

            ##
            # Provide a user friendly representation
            def to_s
              context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
              "#<Twilio.Preview.TrustedComms.BrandContext #{context}>"
            end

            ##
            # Provide a detailed, user friendly representation
            def inspect
              context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
              "#<Twilio.Preview.TrustedComms.BrandContext #{context}>"
            end
          end

          ##
          # PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
          class BrandInstance < InstanceResource
            ##
            # Initialize the BrandInstance
            # @param [Version] version Version that contains the resource
            # @param [Hash] payload payload that contains response from Twilio
            # @param [String] business_sid The unique SID identifier of the Business.
            # @param [String] sid The unique SID identifier of the Brand.
            # @return [BrandInstance] BrandInstance
            def initialize(version, payload, business_sid: nil, sid: nil)
              super(version)

              # Marshaled Properties
              @properties = {
                  'account_sid' => payload['account_sid'],
                  'business_sid' => payload['business_sid'],
                  'sid' => payload['sid'],
                  'links' => payload['links'],
                  'url' => payload['url'],
              }

              # Context
              @instance_context = nil
              @params = {'business_sid' => business_sid, 'sid' => sid || @properties['sid'], }
            end

            ##
            # Generate an instance context for the instance, the context is capable of
            # performing various actions.  All instance actions are proxied to the context
            # @return [BrandContext] BrandContext for this BrandInstance
            def context
              unless @instance_context
                @instance_context = BrandContext.new(@version, @params['business_sid'], @params['sid'], )
              end
              @instance_context
            end

            ##
            # @return [String] Account Sid.
            def account_sid
              @properties['account_sid']
            end

            ##
            # @return [String] Business Sid.
            def business_sid
              @properties['business_sid']
            end

            ##
            # @return [String] Brand Sid.
            def sid
              @properties['sid']
            end

            ##
            # @return [String] Nested resource URLs.
            def links
              @properties['links']
            end

            ##
            # @return [String] The URL of this resource.
            def url
              @properties['url']
            end

            ##
            # Fetch the BrandInstance
            # @return [BrandInstance] Fetched BrandInstance
            def fetch
              context.fetch
            end

            ##
            # Access the branded_channels
            # @return [branded_channels] branded_channels
            def branded_channels
              context.branded_channels
            end

            ##
            # Provide a user friendly representation
            def to_s
              values = @params.map{|k, v| "#{k}: #{v}"}.join(" ")
              "<Twilio.Preview.TrustedComms.BrandInstance #{values}>"
            end

            ##
            # Provide a detailed, user friendly representation
            def inspect
              values = @properties.map{|k, v| "#{k}: #{v}"}.join(" ")
              "<Twilio.Preview.TrustedComms.BrandInstance #{values}>"
            end
          end
        end
      end
    end
  end
end