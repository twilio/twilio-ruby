##
#    This code was generated by
#    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
#     |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
#     |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
#
#    Twilio - Supersim
#    This is the public Twilio REST API.
#
#    NOTE: This class is auto generated by OpenAPI Generator.
#    https://openapi-generator.tech
#    Do not edit the class manually.
#


module Twilio
    module REST
        class Supersim < SupersimBase
            class V1 < Version
                class SettingsUpdateList < ListResource
                    ##
                    # Initialize the SettingsUpdateList
                    # @param [Version] version Version that contains the resource
                    # @return [SettingsUpdateList] SettingsUpdateList
                    def initialize(version)
                        super(version)
                        # Path Solution
                        @solution = {  }
                        @uri = "/SettingsUpdates"
                        
                    end
                
                    ##
                    # Lists SettingsUpdateInstance records from the API as a list.
                    # Unlike stream(), this operation is eager and will load `limit` records into
                    # memory before returning.
                    # @param [String] sim Filter the Settings Updates by a Super SIM's SID or UniqueName.
                    # @param [SettingsUpdateStatus] status Filter the Settings Updates by status. Can be `scheduled`, `in-progress`, `successful`, or `failed`.
                    # @param [Integer] limit Upper limit for the number of records to return. stream()
                    #    guarantees to never return more than limit.  Default is no limit
                    # @param [Integer] page_size Number of records to fetch per request, when
                    #    not set will use the default value of 50 records.  If no page_size is defined
                    #    but a limit is defined, stream() will attempt to read the limit with the most
                    #    efficient page size, i.e. min(limit, 1000)
                    # @return [Array] Array of up to limit results
                    def list(sim: :unset, status: :unset, limit: nil, page_size: nil)
                        self.stream(
                            sim: sim,
                            status: status,
                            limit: limit,
                            page_size: page_size
                        ).entries
                    end

                    ##
                    # Streams Instance records from the API as an Enumerable.
                    # This operation lazily loads records as efficiently as possible until the limit
                    # is reached.
                    # @param [String] sim Filter the Settings Updates by a Super SIM's SID or UniqueName.
                    # @param [SettingsUpdateStatus] status Filter the Settings Updates by status. Can be `scheduled`, `in-progress`, `successful`, or `failed`.
                    # @param [Integer] limit Upper limit for the number of records to return. stream()
                    #    guarantees to never return more than limit.  Default is no limit
                    # @param [Integer] page_size Number of records to fetch per request, when
                    #    not set will use the default value of 50 records.  If no page_size is defined
                    #    but a limit is defined, stream() will attempt to read the limit with the most
                    #    efficient page size, i.e. min(limit, 1000)
                    # @return [Enumerable] Enumerable that will yield up to limit results
                    def stream(sim: :unset, status: :unset, limit: nil, page_size: nil)
                        limits = @version.read_limits(limit, page_size)

                        page = self.page(
                            sim: sim,
                            status: status,
                            page_size: limits[:page_size], )

                        @version.stream(page, limit: limits[:limit], page_limit: limits[:page_limit])
                    end

                    ##
                    # When passed a block, yields SettingsUpdateInstance records from the API.
                    # This operation lazily loads records as efficiently as possible until the limit
                    # is reached.
                    def each
                        limits = @version.read_limits

                        page = self.page(page_size: limits[:page_size], )

                        @version.stream(page,
                            limit: limits[:limit],
                            page_limit: limits[:page_limit]).each {|x| yield x}
                    end

                    ##
                    # Retrieve a single page of SettingsUpdateInstance records from the API.
                    # Request is executed immediately.
                    # @param [String] sim Filter the Settings Updates by a Super SIM's SID or UniqueName.
                    # @param [SettingsUpdateStatus] status Filter the Settings Updates by status. Can be `scheduled`, `in-progress`, `successful`, or `failed`.
                    # @param [String] page_token PageToken provided by the API
                    # @param [Integer] page_number Page Number, this value is simply for client state
                    # @param [Integer] page_size Number of records to return, defaults to 50
                    # @return [Page] Page of SettingsUpdateInstance
                    def page(sim: :unset, status: :unset, page_token: :unset, page_number: :unset, page_size: :unset)
                        params = Twilio::Values.of({
                            
                            'Sim' => sim,
                            
                            'Status' => status,
                            
                            'PageToken' => page_token,
                            'Page' => page_number,
                            'PageSize' => page_size,
                        })

                        response = @version.page('GET', @uri, params: params)

                        SettingsUpdatePage.new(@version, response, @solution)
                    end

                    ##
                    # Retrieve a single page of SettingsUpdateInstance records from the API.
                    # Request is executed immediately.
                    # @param [String] target_url API-generated URL for the requested results page
                    # @return [Page] Page of SettingsUpdateInstance
                    def get_page(target_url)
                        response = @version.domain.request(
                            'GET',
                            target_url
                        )
                    SettingsUpdatePage.new(@version, response, @solution)
                    end
                    


                    # Provide a user friendly representation
                    def to_s
                        '#<Twilio.Supersim.V1.SettingsUpdateList>'
                    end
                end
                class SettingsUpdatePage < Page
                    ##
                    # Initialize the SettingsUpdatePage
                    # @param [Version] version Version that contains the resource
                    # @param [Response] response Response from the API
                    # @param [Hash] solution Path solution for the resource
                    # @return [SettingsUpdatePage] SettingsUpdatePage
                    def initialize(version, response, solution)
                        super(version, response)

                        # Path Solution
                        @solution = solution
                    end

                    ##
                    # Build an instance of SettingsUpdateInstance
                    # @param [Hash] payload Payload response from the API
                    # @return [SettingsUpdateInstance] SettingsUpdateInstance
                    def get_instance(payload)
                        SettingsUpdateInstance.new(@version, payload)
                    end

                    ##
                    # Provide a user friendly representation
                    def to_s
                        '<Twilio.Supersim.V1.SettingsUpdatePage>'
                    end
                end
                class SettingsUpdateInstance < InstanceResource
                    ##
                    # Initialize the SettingsUpdateInstance
                    # @param [Version] version Version that contains the resource
                    # @param [Hash] payload payload that contains response from Twilio
                    # @param [String] account_sid The SID of the
                    #   {Account}[https://www.twilio.com/docs/iam/api/account] that created this SettingsUpdate
                    #   resource.
                    # @param [String] sid The SID of the Call resource to fetch.
                    # @return [SettingsUpdateInstance] SettingsUpdateInstance
                    def initialize(version, payload )
                        super(version)
                        
                        # Marshaled Properties
                        @properties = { 
                            'sid' => payload['sid'],
                            'iccid' => payload['iccid'],
                            'sim_sid' => payload['sim_sid'],
                            'status' => payload['status'],
                            'packages' => payload['packages'],
                            'date_completed' => Twilio.deserialize_iso8601_datetime(payload['date_completed']),
                            'date_created' => Twilio.deserialize_iso8601_datetime(payload['date_created']),
                            'date_updated' => Twilio.deserialize_iso8601_datetime(payload['date_updated']),
                        }
                    end

                    
                    ##
                    # @return [String] The unique identifier of this Settings Update.
                    def sid
                        @properties['sid']
                    end
                    
                    ##
                    # @return [String] The [ICCID](https://en.wikipedia.org/wiki/SIM_card#ICCID) associated with the SIM.
                    def iccid
                        @properties['iccid']
                    end
                    
                    ##
                    # @return [String] The SID of the Super SIM to which this Settings Update was applied.
                    def sim_sid
                        @properties['sim_sid']
                    end
                    
                    ##
                    # @return [SettingsUpdateStatus] 
                    def status
                        @properties['status']
                    end
                    
                    ##
                    # @return [Array<Hash>] Array containing the different Settings Packages that will be applied to the SIM after the update completes. Each object within the array indicates the name and the version of the Settings Package that will be on the SIM if the update is successful.
                    def packages
                        @properties['packages']
                    end
                    
                    ##
                    # @return [Time] The time, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, when the update successfully completed and the new settings were applied to the SIM.
                    def date_completed
                        @properties['date_completed']
                    end
                    
                    ##
                    # @return [Time] The date that this Settings Update was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
                    def date_created
                        @properties['date_created']
                    end
                    
                    ##
                    # @return [Time] The date that this Settings Update was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
                    def date_updated
                        @properties['date_updated']
                    end
                    
                    ##
                    # Provide a user friendly representation
                    def to_s
                        "<Twilio.Supersim.V1.SettingsUpdateInstance>"
                    end

                    ##
                    # Provide a detailed, user friendly representation
                    def inspect
                        "<Twilio.Supersim.V1.SettingsUpdateInstance>"
                    end
                end
            end
        end
    end
end
