##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

module Twilio
  module REST
    class Messaging < Domain
      class V1 < Version
        ##
        # PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
        class DomainConfigMessagingServiceList < ListResource
          ##
          # Initialize the DomainConfigMessagingServiceList
          # @param [Version] version Version that contains the resource
          # @return [DomainConfigMessagingServiceList] DomainConfigMessagingServiceList
          def initialize(version)
            super(version)

            # Path Solution
            @solution = {}
          end

          ##
          # Provide a user friendly representation
          def to_s
            '#<Twilio.Messaging.V1.DomainConfigMessagingServiceList>'
          end
        end

        ##
        # PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
        class DomainConfigMessagingServicePage < Page
          ##
          # Initialize the DomainConfigMessagingServicePage
          # @param [Version] version Version that contains the resource
          # @param [Response] response Response from the API
          # @param [Hash] solution Path solution for the resource
          # @return [DomainConfigMessagingServicePage] DomainConfigMessagingServicePage
          def initialize(version, response, solution)
            super(version, response)

            # Path Solution
            @solution = solution
          end

          ##
          # Build an instance of DomainConfigMessagingServiceInstance
          # @param [Hash] payload Payload response from the API
          # @return [DomainConfigMessagingServiceInstance] DomainConfigMessagingServiceInstance
          def get_instance(payload)
            DomainConfigMessagingServiceInstance.new(@version, payload, )
          end

          ##
          # Provide a user friendly representation
          def to_s
            '<Twilio.Messaging.V1.DomainConfigMessagingServicePage>'
          end
        end

        ##
        # PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
        class DomainConfigMessagingServiceContext < InstanceContext
          ##
          # Initialize the DomainConfigMessagingServiceContext
          # @param [Version] version Version that contains the resource
          # @param [String] messaging_service_sid Unique string used to identify the
          #   Messaging service that this domain should be associated with.
          # @return [DomainConfigMessagingServiceContext] DomainConfigMessagingServiceContext
          def initialize(version, messaging_service_sid)
            super(version)

            # Path Solution
            @solution = {messaging_service_sid: messaging_service_sid, }
            @uri = "/LinkShortening/MessagingService/#{@solution[:messaging_service_sid]}/DomainConfig"
          end

          ##
          # Fetch the DomainConfigMessagingServiceInstance
          # @return [DomainConfigMessagingServiceInstance] Fetched DomainConfigMessagingServiceInstance
          def fetch
            payload = @version.fetch('GET', @uri)

            DomainConfigMessagingServiceInstance.new(
                @version,
                payload,
                messaging_service_sid: @solution[:messaging_service_sid],
            )
          end

          ##
          # Provide a user friendly representation
          def to_s
            context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
            "#<Twilio.Messaging.V1.DomainConfigMessagingServiceContext #{context}>"
          end

          ##
          # Provide a detailed, user friendly representation
          def inspect
            context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
            "#<Twilio.Messaging.V1.DomainConfigMessagingServiceContext #{context}>"
          end
        end

        ##
        # PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
        class DomainConfigMessagingServiceInstance < InstanceResource
          ##
          # Initialize the DomainConfigMessagingServiceInstance
          # @param [Version] version Version that contains the resource
          # @param [Hash] payload payload that contains response from Twilio
          # @param [String] messaging_service_sid Unique string used to identify the
          #   Messaging service that this domain should be associated with.
          # @return [DomainConfigMessagingServiceInstance] DomainConfigMessagingServiceInstance
          def initialize(version, payload, messaging_service_sid: nil)
            super(version)

            # Marshaled Properties
            @properties = {
                'domain_sid' => payload['domain_sid'],
                'config_sid' => payload['config_sid'],
                'messaging_service_sid' => payload['messaging_service_sid'],
                'fallback_url' => payload['fallback_url'],
                'callback_url' => payload['callback_url'],
                'date_created' => Twilio.deserialize_iso8601_datetime(payload['date_created']),
                'date_updated' => Twilio.deserialize_iso8601_datetime(payload['date_updated']),
                'url' => payload['url'],
            }

            # Context
            @instance_context = nil
            @params = {'messaging_service_sid' => messaging_service_sid || @properties['messaging_service_sid'], }
          end

          ##
          # Generate an instance context for the instance, the context is capable of
          # performing various actions.  All instance actions are proxied to the context
          # @return [DomainConfigMessagingServiceContext] DomainConfigMessagingServiceContext for this DomainConfigMessagingServiceInstance
          def context
            unless @instance_context
              @instance_context = DomainConfigMessagingServiceContext.new(
                  @version,
                  @params['messaging_service_sid'],
              )
            end
            @instance_context
          end

          ##
          # @return [String] The unique string that we created to identify the Domain resource.
          def domain_sid
            @properties['domain_sid']
          end

          ##
          # @return [String] The unique string that we created to identify the Domain config (prefix ZK).
          def config_sid
            @properties['config_sid']
          end

          ##
          # @return [String] The unique string that identifies the messaging service
          def messaging_service_sid
            @properties['messaging_service_sid']
          end

          ##
          # @return [String] We will redirect requests to urls we are unable to identify to this url.
          def fallback_url
            @properties['fallback_url']
          end

          ##
          # @return [String] URL to receive click events to your webhook whenever the recipients click on the shortened links.
          def callback_url
            @properties['callback_url']
          end

          ##
          # @return [Time] Date this Domain Config was created.
          def date_created
            @properties['date_created']
          end

          ##
          # @return [Time] Date that this Domain Config was last updated.
          def date_updated
            @properties['date_updated']
          end

          ##
          # @return [String] The url
          def url
            @properties['url']
          end

          ##
          # Fetch the DomainConfigMessagingServiceInstance
          # @return [DomainConfigMessagingServiceInstance] Fetched DomainConfigMessagingServiceInstance
          def fetch
            context.fetch
          end

          ##
          # Provide a user friendly representation
          def to_s
            values = @params.map{|k, v| "#{k}: #{v}"}.join(" ")
            "<Twilio.Messaging.V1.DomainConfigMessagingServiceInstance #{values}>"
          end

          ##
          # Provide a detailed, user friendly representation
          def inspect
            values = @properties.map{|k, v| "#{k}: #{v}"}.join(" ")
            "<Twilio.Messaging.V1.DomainConfigMessagingServiceInstance #{values}>"
          end
        end
      end
    end
  end
end