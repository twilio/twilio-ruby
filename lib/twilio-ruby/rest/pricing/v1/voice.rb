##
#    This code was generated by
#    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
#     |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
#     |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
#
#    Twilio - Pricing
#    This is the public Twilio REST API.
#
#    NOTE: This class is auto generated by OpenAPI Generator.
#    https://openapi-generator.tech
#    Do not edit the class manually.
#


module Twilio
    module REST
        class Pricing < PricingBase
            class V1 < Version
                class VoiceList < ListResource
                    ##
                    # Initialize the VoiceList
                    # @param [Version] version Version that contains the resource
                    # @return [VoiceList] VoiceList
                    def initialize(version)
                        super(version)
                        # Path Solution
                        @solution = {  }
                        @uri = "/Voice"
                        # Components
                        @countries = nil
                        @numbers = nil
                    end
                

                ##
                # Access the countries
                # @return [CountryList]
                # @return [CountryContext] if sid was passed.
                def countries(iso_country=:unset)
                    raise ArgumentError, 'iso_country cannot be nil' if iso_country.nil?

                    if iso_country != :unset
                        return CountryContext.new(@version,iso_country )
                    end

                    @countries ||= CountryList.new(@version )
                end
                ##
                # Access the numbers
                # @return [NumberList]
                # @return [NumberContext] if sid was passed.
                def numbers(number=:unset)
                    raise ArgumentError, 'number cannot be nil' if number.nil?

                    if number != :unset
                        return NumberContext.new(@version,number )
                    end

                    @numbers ||= NumberList.new(@version )
                end

                    # Provide a user friendly representation
                    def to_s
                        '#<Twilio.Pricing.V1.VoiceList>'
                    end
                end
                class VoicePage < Page
                    ##
                    # Initialize the VoicePage
                    # @param [Version] version Version that contains the resource
                    # @param [Response] response Response from the API
                    # @param [Hash] solution Path solution for the resource
                    # @return [VoicePage] VoicePage
                    def initialize(version, response, solution)
                        super(version, response)

                        # Path Solution
                        @solution = solution
                    end

                    ##
                    # Build an instance of VoiceInstance
                    # @param [Hash] payload Payload response from the API
                    # @return [VoiceInstance] VoiceInstance
                    def get_instance(payload)
                        VoiceInstance.new(@version, payload)
                    end

                    ##
                    # Provide a user friendly representation
                    def to_s
                        '<Twilio.Pricing.V1.VoicePage>'
                    end
                end
                class VoiceInstance < InstanceResource
                    ##
                    # Initialize the VoiceInstance
                    # @param [Version] version Version that contains the resource
                    # @param [Hash] payload payload that contains response from Twilio
                    # @param [String] account_sid The SID of the
                    #   {Account}[https://www.twilio.com/docs/iam/api/account] that created this Voice
                    #   resource.
                    # @param [String] sid The SID of the Call resource to fetch.
                    # @return [VoiceInstance] VoiceInstance
                    def initialize(version )
                        super(version)
                        
                    end

                    
                    ##
                    # Provide a user friendly representation
                    def to_s
                        "<Twilio.Pricing.V1.VoiceInstance>"
                    end

                    ##
                    # Provide a detailed, user friendly representation
                    def inspect
                        "<Twilio.Pricing.V1.VoiceInstance>"
                    end
                end
            end
        end
    end
end
