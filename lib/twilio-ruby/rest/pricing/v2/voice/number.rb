##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

module Twilio
  module REST
    class Pricing < Domain
      class V2 < Version
        class VoiceList < ListResource
          class NumberList < ListResource
            ##
            # Initialize the NumberList
            # @param [Version] version Version that contains the resource
            # @return [NumberList] NumberList
            def initialize(version)
              super(version)

              # Path Solution
              @solution = {}
            end

            ##
            # Provide a user friendly representation
            def to_s
              '#<Twilio.Pricing.V2.NumberList>'
            end
          end

          class NumberPage < Page
            ##
            # Initialize the NumberPage
            # @param [Version] version Version that contains the resource
            # @param [Response] response Response from the API
            # @param [Hash] solution Path solution for the resource
            # @return [NumberPage] NumberPage
            def initialize(version, response, solution)
              super(version, response)

              # Path Solution
              @solution = solution
            end

            ##
            # Build an instance of NumberInstance
            # @param [Hash] payload Payload response from the API
            # @return [NumberInstance] NumberInstance
            def get_instance(payload)
              NumberInstance.new(@version, payload, )
            end

            ##
            # Provide a user friendly representation
            def to_s
              '<Twilio.Pricing.V2.NumberPage>'
            end
          end

          class NumberContext < InstanceContext
            ##
            # Initialize the NumberContext
            # @param [Version] version Version that contains the resource
            # @param [String] destination_number The destination phone number, in
            #   [E.164](https://www.twilio.com/docs/glossary/what-e164) format, for which to
            #   fetch the origin-based voice pricing information. E.164 format consists of a +
            #   followed by the country code and subscriber number.
            # @return [NumberContext] NumberContext
            def initialize(version, destination_number)
              super(version)

              # Path Solution
              @solution = {destination_number: destination_number, }
              @uri = "/Voice/Numbers/#{CGI.escape(@solution[:destination_number]).gsub("+", "%20")}"
            end

            ##
            # Fetch a NumberInstance
            # @param [String] origination_number The origination phone number, in
            #   [E.164](https://www.twilio.com/docs/glossary/what-e164) format, for which to
            #   fetch the origin-based voice pricing information. E.164 format consists of a +
            #   followed by the country code and subscriber number.
            # @return [NumberInstance] Fetched NumberInstance
            def fetch(origination_number: :unset)
              params = Twilio::Values.of({'OriginationNumber' => origination_number, })

              payload = @version.fetch(
                  'GET',
                  @uri,
                  params,
              )

              NumberInstance.new(@version, payload, destination_number: @solution[:destination_number], )
            end

            ##
            # Provide a user friendly representation
            def to_s
              context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
              "#<Twilio.Pricing.V2.NumberContext #{context}>"
            end

            ##
            # Provide a detailed, user friendly representation
            def inspect
              context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
              "#<Twilio.Pricing.V2.NumberContext #{context}>"
            end
          end

          class NumberInstance < InstanceResource
            ##
            # Initialize the NumberInstance
            # @param [Version] version Version that contains the resource
            # @param [Hash] payload payload that contains response from Twilio
            # @param [String] destination_number The destination phone number, in
            #   [E.164](https://www.twilio.com/docs/glossary/what-e164) format, for which to
            #   fetch the origin-based voice pricing information. E.164 format consists of a +
            #   followed by the country code and subscriber number.
            # @return [NumberInstance] NumberInstance
            def initialize(version, payload, destination_number: nil)
              super(version)

              # Marshaled Properties
              @properties = {
                  'destination_number' => payload['destination_number'],
                  'origination_number' => payload['origination_number'],
                  'country' => payload['country'],
                  'iso_country' => payload['iso_country'],
                  'outbound_call_prices' => payload['outbound_call_prices'],
                  'inbound_call_price' => payload['inbound_call_price'],
                  'price_unit' => payload['price_unit'],
                  'url' => payload['url'],
              }

              # Context
              @instance_context = nil
              @params = {'destination_number' => destination_number || @properties['destination_number'], }
            end

            ##
            # Generate an instance context for the instance, the context is capable of
            # performing various actions.  All instance actions are proxied to the context
            # @return [NumberContext] NumberContext for this NumberInstance
            def context
              unless @instance_context
                @instance_context = NumberContext.new(@version, @params['destination_number'], )
              end
              @instance_context
            end

            ##
            # @return [String] The destination phone number, in E.164 format
            def destination_number
              @properties['destination_number']
            end

            ##
            # @return [String] The origination phone number, in E.164 format
            def origination_number
              @properties['origination_number']
            end

            ##
            # @return [String] The name of the country
            def country
              @properties['country']
            end

            ##
            # @return [String] The ISO country code
            def iso_country
              @properties['iso_country']
            end

            ##
            # @return [String] The list of OutboundCallPriceWithOrigin records
            def outbound_call_prices
              @properties['outbound_call_prices']
            end

            ##
            # @return [String] The InboundCallPrice record
            def inbound_call_price
              @properties['inbound_call_price']
            end

            ##
            # @return [String] The currency in which prices are measured, in ISO 4127 format (e.g. usd, eur, jpy)
            def price_unit
              @properties['price_unit']
            end

            ##
            # @return [String] The absolute URL of the resource
            def url
              @properties['url']
            end

            ##
            # Fetch a NumberInstance
            # @param [String] origination_number The origination phone number, in
            #   [E.164](https://www.twilio.com/docs/glossary/what-e164) format, for which to
            #   fetch the origin-based voice pricing information. E.164 format consists of a +
            #   followed by the country code and subscriber number.
            # @return [NumberInstance] Fetched NumberInstance
            def fetch(origination_number: :unset)
              context.fetch(origination_number: origination_number, )
            end

            ##
            # Provide a user friendly representation
            def to_s
              values = @params.map{|k, v| "#{k}: #{v}"}.join(" ")
              "<Twilio.Pricing.V2.NumberInstance #{values}>"
            end

            ##
            # Provide a detailed, user friendly representation
            def inspect
              values = @properties.map{|k, v| "#{k}: #{v}"}.join(" ")
              "<Twilio.Pricing.V2.NumberInstance #{values}>"
            end
          end
        end
      end
    end
  end
end