##
#    This code was generated by
#    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
#     |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
#     |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
#
#    Organization Public API
#    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
#
#    NOTE: This class is auto generated by OpenAPI Generator.
#    https://openapi-generator.tech
#    Do not edit the class manually.
#

module Twilio
    module REST
        class PreviewIam
            class Organizations < Version
                ##
                # Initialize the Organizations version of PreviewIam
                def initialize(domain, organization_sid)
                    super(domain)
                    @version = 'Organizations'
                    @accounts = nil
                    @role_assignments = nil
                    @users = nil
                    @organization_sid = organization_sid
                end

                ##
                # @param [String] organization_sid
                # @return [Twilio::REST::PreviewIam::Organizations::AccountContext] if organizationSid was passed.
                # @return [Twilio::REST::PreviewIam::Organizations::AccountList]
                def accounts(account_sid=:unset)
                    if account_sid.nil?
                        raise ArgumentError, 'organization_sid cannot be nil'
                    end
                    if account_sid == :unset
                        @accounts ||= AccountList.new(self, @organization_sid)
                    else
                        @accounts ||= AccountContext.new(self, @organization_sid, account_sid)
                    end
                end
                ##
                # @param [String] organization_sid
                # @return [Twilio::REST::PreviewIam::Organizations::RoleAssignmentContext] if organizationSid was passed.
                # @return [Twilio::REST::PreviewIam::Organizations::RoleAssignmentList]
                def role_assignments(organization_sid=:unset)
                    if organization_sid.nil?
                        raise ArgumentError, 'organization_sid cannot be nil'
                    end
                    if organization_sid == :unset
                        @role_assignments ||= RoleAssignmentList.new self
                    else
                        RoleAssignmentContext.new(self, organization_sid)
                    end
                end
                ##
                # @param [String] organization_sid
                # @return [Twilio::REST::PreviewIam::Organizations::UserContext] if organizationSid was passed.
                # @return [Twilio::REST::PreviewIam::Organizations::UserList]
                def users(organization_sid=:unset)
                    if organization_sid.nil?
                        raise ArgumentError, 'organization_sid cannot be nil'
                    end
                    if organization_sid == :unset
                        @users ||= UserList.new self
                    else
                        UserContext.new(self, organization_sid)
                    end
                end
                ##
                # Provide a user friendly representation
                def to_s
                    '<Twilio::REST::PreviewIam::Organizations>';
                end
            end
        end
    end
end
