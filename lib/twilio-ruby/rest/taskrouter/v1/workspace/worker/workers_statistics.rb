##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

module Twilio
  module REST
    class Taskrouter < Domain
      class V1 < Version
        class WorkspaceContext < InstanceContext
          class WorkerList < ListResource
            class WorkersStatisticsList < ListResource
              ##
              # Initialize the WorkersStatisticsList
              # @param [Version] version Version that contains the resource
              # @param [String] workspace_sid The SID of the Workspace that contains the Worker.
              # @return [WorkersStatisticsList] WorkersStatisticsList
              def initialize(version, workspace_sid: nil)
                super(version)

                # Path Solution
                @solution = {workspace_sid: workspace_sid}
              end

              ##
              # Provide a user friendly representation
              def to_s
                '#<Twilio.Taskrouter.V1.WorkersStatisticsList>'
              end
            end

            class WorkersStatisticsPage < Page
              ##
              # Initialize the WorkersStatisticsPage
              # @param [Version] version Version that contains the resource
              # @param [Response] response Response from the API
              # @param [Hash] solution Path solution for the resource
              # @return [WorkersStatisticsPage] WorkersStatisticsPage
              def initialize(version, response, solution)
                super(version, response)

                # Path Solution
                @solution = solution
              end

              ##
              # Build an instance of WorkersStatisticsInstance
              # @param [Hash] payload Payload response from the API
              # @return [WorkersStatisticsInstance] WorkersStatisticsInstance
              def get_instance(payload)
                WorkersStatisticsInstance.new(@version, payload, workspace_sid: @solution[:workspace_sid], )
              end

              ##
              # Provide a user friendly representation
              def to_s
                '<Twilio.Taskrouter.V1.WorkersStatisticsPage>'
              end
            end

            class WorkersStatisticsContext < InstanceContext
              ##
              # Initialize the WorkersStatisticsContext
              # @param [Version] version Version that contains the resource
              # @param [String] workspace_sid The SID of the Workspace with the Worker to fetch.
              # @return [WorkersStatisticsContext] WorkersStatisticsContext
              def initialize(version, workspace_sid)
                super(version)

                # Path Solution
                @solution = {workspace_sid: workspace_sid, }
                @uri = "/Workspaces/#{@solution[:workspace_sid]}/Workers/Statistics"
              end

              ##
              # Fetch the WorkersStatisticsInstance
              # @param [String] minutes Only calculate statistics since this many minutes in the
              #   past. The default 15 minutes. This is helpful for displaying statistics for the
              #   last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends.
              # @param [Time] start_date Only calculate statistics from this date and time and
              #   later, specified in {ISO 8601}[https://en.wikipedia.org/wiki/ISO_8601] format.
              # @param [Time] end_date Only calculate statistics from this date and time and
              #   earlier, specified in GMT as an {ISO
              #   8601}[https://en.wikipedia.org/wiki/ISO_8601] date-time.
              # @param [String] task_queue_sid The SID of the TaskQueue for which to fetch
              #   Worker statistics.
              # @param [String] task_queue_name The `friendly_name` of the TaskQueue for which
              #   to fetch Worker statistics.
              # @param [String] friendly_name Only include Workers with `friendly_name` values
              #   that match this parameter.
              # @param [String] task_channel Only calculate statistics on this TaskChannel. Can
              #   be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or
              #   `default`.
              # @return [WorkersStatisticsInstance] Fetched WorkersStatisticsInstance
              def fetch(minutes: :unset, start_date: :unset, end_date: :unset, task_queue_sid: :unset, task_queue_name: :unset, friendly_name: :unset, task_channel: :unset)
                params = Twilio::Values.of({
                    'Minutes' => minutes,
                    'StartDate' => Twilio.serialize_iso8601_datetime(start_date),
                    'EndDate' => Twilio.serialize_iso8601_datetime(end_date),
                    'TaskQueueSid' => task_queue_sid,
                    'TaskQueueName' => task_queue_name,
                    'FriendlyName' => friendly_name,
                    'TaskChannel' => task_channel,
                })

                payload = @version.fetch('GET', @uri, params: params)

                WorkersStatisticsInstance.new(@version, payload, workspace_sid: @solution[:workspace_sid], )
              end

              ##
              # Provide a user friendly representation
              def to_s
                context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
                "#<Twilio.Taskrouter.V1.WorkersStatisticsContext #{context}>"
              end

              ##
              # Provide a detailed, user friendly representation
              def inspect
                context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
                "#<Twilio.Taskrouter.V1.WorkersStatisticsContext #{context}>"
              end
            end

            class WorkersStatisticsInstance < InstanceResource
              ##
              # Initialize the WorkersStatisticsInstance
              # @param [Version] version Version that contains the resource
              # @param [Hash] payload payload that contains response from Twilio
              # @param [String] workspace_sid The SID of the Workspace that contains the Worker.
              # @return [WorkersStatisticsInstance] WorkersStatisticsInstance
              def initialize(version, payload, workspace_sid: nil)
                super(version)

                # Marshaled Properties
                @properties = {
                    'realtime' => payload['realtime'],
                    'cumulative' => payload['cumulative'],
                    'account_sid' => payload['account_sid'],
                    'workspace_sid' => payload['workspace_sid'],
                    'url' => payload['url'],
                }

                # Context
                @instance_context = nil
                @params = {'workspace_sid' => workspace_sid, }
              end

              ##
              # Generate an instance context for the instance, the context is capable of
              # performing various actions.  All instance actions are proxied to the context
              # @return [WorkersStatisticsContext] WorkersStatisticsContext for this WorkersStatisticsInstance
              def context
                unless @instance_context
                  @instance_context = WorkersStatisticsContext.new(@version, @params['workspace_sid'], )
                end
                @instance_context
              end

              ##
              # @return [Hash] An object that contains the real-time statistics for the Worker
              def realtime
                @properties['realtime']
              end

              ##
              # @return [Hash] An object that contains the cumulative statistics for the Worker
              def cumulative
                @properties['cumulative']
              end

              ##
              # @return [String] The SID of the Account that created the resource
              def account_sid
                @properties['account_sid']
              end

              ##
              # @return [String] The SID of the Workspace that contains the Worker
              def workspace_sid
                @properties['workspace_sid']
              end

              ##
              # @return [String] The absolute URL of the Worker statistics resource
              def url
                @properties['url']
              end

              ##
              # Fetch the WorkersStatisticsInstance
              # @param [String] minutes Only calculate statistics since this many minutes in the
              #   past. The default 15 minutes. This is helpful for displaying statistics for the
              #   last 15 minutes, 240 minutes (4 hours), and 480 minutes (8 hours) to see trends.
              # @param [Time] start_date Only calculate statistics from this date and time and
              #   later, specified in {ISO 8601}[https://en.wikipedia.org/wiki/ISO_8601] format.
              # @param [Time] end_date Only calculate statistics from this date and time and
              #   earlier, specified in GMT as an {ISO
              #   8601}[https://en.wikipedia.org/wiki/ISO_8601] date-time.
              # @param [String] task_queue_sid The SID of the TaskQueue for which to fetch
              #   Worker statistics.
              # @param [String] task_queue_name The `friendly_name` of the TaskQueue for which
              #   to fetch Worker statistics.
              # @param [String] friendly_name Only include Workers with `friendly_name` values
              #   that match this parameter.
              # @param [String] task_channel Only calculate statistics on this TaskChannel. Can
              #   be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or
              #   `default`.
              # @return [WorkersStatisticsInstance] Fetched WorkersStatisticsInstance
              def fetch(minutes: :unset, start_date: :unset, end_date: :unset, task_queue_sid: :unset, task_queue_name: :unset, friendly_name: :unset, task_channel: :unset)
                context.fetch(
                    minutes: minutes,
                    start_date: start_date,
                    end_date: end_date,
                    task_queue_sid: task_queue_sid,
                    task_queue_name: task_queue_name,
                    friendly_name: friendly_name,
                    task_channel: task_channel,
                )
              end

              ##
              # Provide a user friendly representation
              def to_s
                values = @params.map{|k, v| "#{k}: #{v}"}.join(" ")
                "<Twilio.Taskrouter.V1.WorkersStatisticsInstance #{values}>"
              end

              ##
              # Provide a detailed, user friendly representation
              def inspect
                values = @properties.map{|k, v| "#{k}: #{v}"}.join(" ")
                "<Twilio.Taskrouter.V1.WorkersStatisticsInstance #{values}>"
              end
            end
          end
        end
      end
    end
  end
end