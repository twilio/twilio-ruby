##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

module Twilio
  module REST
    class Video < Domain
      class V1 < Version
        ##
        # PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
        class CompositionHookList < ListResource
          ##
          # Initialize the CompositionHookList
          # @param [Version] version Version that contains the resource
          # @return [CompositionHookList] CompositionHookList
          def initialize(version)
            super(version)

            # Path Solution
            @solution = {}
            @uri = "/CompositionHooks"
          end

          ##
          # Lists CompositionHookInstance records from the API as a list.
          # Unlike stream(), this operation is eager and will load `limit` records into
          # memory before returning.
          # @param [Boolean] enabled Only show Composition Hooks that are enabled or
          #   disabled.
          # @param [Time] date_created_after Only show Composition Hooks created on or after
          #   this ISO8601 date-time with timezone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or
          #   `YYYY-MM-DDThh:mm:ssZ`.
          # @param [Time] date_created_before Only show Composition Hooks created before
          #   this ISO8601 date-time with timezone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or
          #   `YYYY-MM-DDThh:mm:ssZ`.
          # @param [String] friendly_name Only show Composition Hooks with friendly name
          #   that match this case-insensitive string, of up to 100 characters in length.
          #   Filtering by partial friendly names is allowed, using wildcards (e.g.
          #   `*my*hook*`).
          # @param [Integer] limit Upper limit for the number of records to return. stream()
          #    guarantees to never return more than limit.  Default is no limit
          # @param [Integer] page_size Number of records to fetch per request, when
          #    not set will use the default value of 50 records.  If no page_size is defined
          #    but a limit is defined, stream() will attempt to read the limit with the most
          #    efficient page size, i.e. min(limit, 1000)
          # @return [Array] Array of up to limit results
          def list(enabled: :unset, date_created_after: :unset, date_created_before: :unset, friendly_name: :unset, limit: nil, page_size: nil)
            self.stream(
                enabled: enabled,
                date_created_after: date_created_after,
                date_created_before: date_created_before,
                friendly_name: friendly_name,
                limit: limit,
                page_size: page_size
            ).entries
          end

          ##
          # Streams CompositionHookInstance records from the API as an Enumerable.
          # This operation lazily loads records as efficiently as possible until the limit
          # is reached.
          # @param [Boolean] enabled Only show Composition Hooks that are enabled or
          #   disabled.
          # @param [Time] date_created_after Only show Composition Hooks created on or after
          #   this ISO8601 date-time with timezone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or
          #   `YYYY-MM-DDThh:mm:ssZ`.
          # @param [Time] date_created_before Only show Composition Hooks created before
          #   this ISO8601 date-time with timezone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or
          #   `YYYY-MM-DDThh:mm:ssZ`.
          # @param [String] friendly_name Only show Composition Hooks with friendly name
          #   that match this case-insensitive string, of up to 100 characters in length.
          #   Filtering by partial friendly names is allowed, using wildcards (e.g.
          #   `*my*hook*`).
          # @param [Integer] limit Upper limit for the number of records to return. stream()
          #    guarantees to never return more than limit. Default is no limit.
          # @param [Integer] page_size Number of records to fetch per request, when
          #    not set will use the default value of 50 records. If no page_size is defined
          #    but a limit is defined, stream() will attempt to read the limit with the most
          #    efficient page size, i.e. min(limit, 1000)
          # @return [Enumerable] Enumerable that will yield up to limit results
          def stream(enabled: :unset, date_created_after: :unset, date_created_before: :unset, friendly_name: :unset, limit: nil, page_size: nil)
            limits = @version.read_limits(limit, page_size)

            page = self.page(
                enabled: enabled,
                date_created_after: date_created_after,
                date_created_before: date_created_before,
                friendly_name: friendly_name,
                page_size: limits[:page_size],
            )

            @version.stream(page, limit: limits[:limit], page_limit: limits[:page_limit])
          end

          ##
          # When passed a block, yields CompositionHookInstance records from the API.
          # This operation lazily loads records as efficiently as possible until the limit
          # is reached.
          def each
            limits = @version.read_limits

            page = self.page(page_size: limits[:page_size], )

            @version.stream(page,
                            limit: limits[:limit],
                            page_limit: limits[:page_limit]).each {|x| yield x}
          end

          ##
          # Retrieve a single page of CompositionHookInstance records from the API.
          # Request is executed immediately.
          # @param [Boolean] enabled Only show Composition Hooks that are enabled or
          #   disabled.
          # @param [Time] date_created_after Only show Composition Hooks created on or after
          #   this ISO8601 date-time with timezone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or
          #   `YYYY-MM-DDThh:mm:ssZ`.
          # @param [Time] date_created_before Only show Composition Hooks created before
          #   this ISO8601 date-time with timezone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or
          #   `YYYY-MM-DDThh:mm:ssZ`.
          # @param [String] friendly_name Only show Composition Hooks with friendly name
          #   that match this case-insensitive string, of up to 100 characters in length.
          #   Filtering by partial friendly names is allowed, using wildcards (e.g.
          #   `*my*hook*`).
          # @param [String] page_token PageToken provided by the API
          # @param [Integer] page_number Page Number, this value is simply for client state
          # @param [Integer] page_size Number of records to return, defaults to 50
          # @return [Page] Page of CompositionHookInstance
          def page(enabled: :unset, date_created_after: :unset, date_created_before: :unset, friendly_name: :unset, page_token: :unset, page_number: :unset, page_size: :unset)
            params = Twilio::Values.of({
                'Enabled' => enabled,
                'DateCreatedAfter' => Twilio.serialize_iso8601_datetime(date_created_after),
                'DateCreatedBefore' => Twilio.serialize_iso8601_datetime(date_created_before),
                'FriendlyName' => friendly_name,
                'PageToken' => page_token,
                'Page' => page_number,
                'PageSize' => page_size,
            })
            response = @version.page(
                'GET',
                @uri,
                params
            )
            CompositionHookPage.new(@version, response, @solution)
          end

          ##
          # Retrieve a single page of CompositionHookInstance records from the API.
          # Request is executed immediately.
          # @param [String] target_url API-generated URL for the requested results page
          # @return [Page] Page of CompositionHookInstance
          def get_page(target_url)
            response = @version.domain.request(
                'GET',
                target_url
            )
            CompositionHookPage.new(@version, response, @solution)
          end

          ##
          # Retrieve a single page of CompositionHookInstance records from the API.
          # Request is executed immediately.
          # @param [String] friendly_name Friendly name of the Composition Hook to be shown
          #   in the console, must be unique per account and up to 100 characters.
          # @param [Boolean] enabled Boolean flag indicating if the Composition Hook is
          #   active. Possible values are `true` or `false`. When `true`, the Composition Hook
          #   will be triggered for every completed Group Room on this account. When `false`,
          #   the Composition Hook never triggers.
          # @param [Hash] video_layout A JSON object defining the video layout of the
          #   Composition Hook in terms of regions. See the section [Specifying Video
          #   Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) for further information.
          # @param [String] audio_sources An array of audio sources to merge. All the
          #   specified sources must belong to the same Group Room. It can include zero or
          #   more Track names. These can be specified using wildcards (e.g. `student*`). The
          #   use of `[*]` has semantics "all if any" meaning zero or more (i.e. all)
          #   depending on whether the Group Room had audio tracks.
          # @param [String] audio_sources_excluded An array of audio sources to exclude from
          #   the Composition Hook. Any new Composition triggered by the Composition Hook
          #   shall include all audio sources specified in `AudioSources` except for the ones
          #   specified in `AudioSourcesExcluded`. This parameter may include zero or more
          #   Track names. These can be specified using wildcards (e.g. `student*`).
          # @param [String] resolution A string representing the number of pixels for rows
          #   (width) and columns (height) of the generated composed video. This string must
          #   have the format `{width}x{height}`. This parameter must comply with the
          #   following constraints:
          #
          #   * `width >= 16 && width <= 1280`
          #   * `height >= 16 && height <= 1280`
          #   * `width * height <= 921,600`
          #
          #   Typical values are:
          #
          #   * HD = `1280x720`
          #   * PAL = `1024x576`
          #   * VGA = `640x480`
          #   * CIF = `320x240`
          #
          #   Note that the `Resolution` implicitly imposes an aspect ratio to the resulting
          #   composition. When the original video tracks get constrained by this aspect ratio
          #   they are scaled-down to fit. You can find detailed information in the
          #   [Specifying Video
          #   Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) section. Defaults to `640x480`.
          # @param [composition_hook.Format] format Container format of the Composition
          #   media files created by the Composition Hook. Can be any of the following: `mp4`,
          #   `webm`. The use of `mp4` or `webm` makes mandatory the specification of
          #   `AudioSources` and/or one `VideoLayout` element containing a valid
          #   `video_sources` list, otherwise an error is fired. Defaults to `webm`.
          # @param [String] status_callback A URL that Twilio sends asynchronous webhook
          #   requests to on every composition event. If not provided, status callback events
          #   will not be dispatched.
          # @param [String] status_callback_method HTTP method Twilio should use when
          #   requesting the above URL. Defaults to `POST`.
          # @param [Boolean] trim When activated, clips all the intervals where there is no
          #   active media in the Compositions triggered by the Composition Hook. This results
          #   in shorter compositions in cases when the Room was created but no Participant
          #   joined for some time, or if all the Participants left the room and joined at a
          #   later stage, as those gaps will be removed. You can find further information in
          #   the [Specifying Video
          #   Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) section. Defaults to `true`.
          # @return [CompositionHookInstance] Newly created CompositionHookInstance
          def create(friendly_name: nil, enabled: :unset, video_layout: :unset, audio_sources: :unset, audio_sources_excluded: :unset, resolution: :unset, format: :unset, status_callback: :unset, status_callback_method: :unset, trim: :unset)
            data = Twilio::Values.of({
                'FriendlyName' => friendly_name,
                'Enabled' => enabled,
                'VideoLayout' => Twilio.serialize_object(video_layout),
                'AudioSources' => Twilio.serialize_list(audio_sources) { |e| e },
                'AudioSourcesExcluded' => Twilio.serialize_list(audio_sources_excluded) { |e| e },
                'Resolution' => resolution,
                'Format' => format,
                'StatusCallback' => status_callback,
                'StatusCallbackMethod' => status_callback_method,
                'Trim' => trim,
            })

            payload = @version.create(
                'POST',
                @uri,
                data: data
            )

            CompositionHookInstance.new(@version, payload, )
          end

          ##
          # Provide a user friendly representation
          def to_s
            '#<Twilio.Video.V1.CompositionHookList>'
          end
        end

        ##
        # PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
        class CompositionHookPage < Page
          ##
          # Initialize the CompositionHookPage
          # @param [Version] version Version that contains the resource
          # @param [Response] response Response from the API
          # @param [Hash] solution Path solution for the resource
          # @return [CompositionHookPage] CompositionHookPage
          def initialize(version, response, solution)
            super(version, response)

            # Path Solution
            @solution = solution
          end

          ##
          # Build an instance of CompositionHookInstance
          # @param [Hash] payload Payload response from the API
          # @return [CompositionHookInstance] CompositionHookInstance
          def get_instance(payload)
            CompositionHookInstance.new(@version, payload, )
          end

          ##
          # Provide a user friendly representation
          def to_s
            '<Twilio.Video.V1.CompositionHookPage>'
          end
        end

        ##
        # PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
        class CompositionHookContext < InstanceContext
          ##
          # Initialize the CompositionHookContext
          # @param [Version] version Version that contains the resource
          # @param [String] sid The Composition Hook Sid that uniquely identifies the
          #   Composition Hook to fetch.
          # @return [CompositionHookContext] CompositionHookContext
          def initialize(version, sid)
            super(version)

            # Path Solution
            @solution = {sid: sid, }
            @uri = "/CompositionHooks/#{@solution[:sid]}"
          end

          ##
          # Fetch a CompositionHookInstance
          # @return [CompositionHookInstance] Fetched CompositionHookInstance
          def fetch
            params = Twilio::Values.of({})

            payload = @version.fetch(
                'GET',
                @uri,
                params,
            )

            CompositionHookInstance.new(@version, payload, sid: @solution[:sid], )
          end

          ##
          # Deletes the CompositionHookInstance
          # @return [Boolean] true if delete succeeds, false otherwise
          def delete
            @version.delete('delete', @uri)
          end

          ##
          # Update the CompositionHookInstance
          # @param [String] friendly_name Friendly name of the Composition Hook to be shown
          #   in the console, must be unique per account and up to 100 characters.
          # @param [Boolean] enabled Boolean flag indicating if the Composition Hook is
          #   active. Possible values are `true` or `false`. When `true`, the Composition Hook
          #   will be triggered for every completed Group Room on this account. When `false`,
          #   the Composition Hook never triggers.
          # @param [Hash] video_layout A JSON object defining the video layout of the
          #   Composition Hook in terms of regions. See the section [Specifying Video
          #   Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) for further information.
          # @param [String] audio_sources An array of audio sources to merge. All the
          #   specified sources must belong to the same Group Room. It can include zero or
          #   more Track names. These can be specified using wildcards (e.g. `student*`). The
          #   use of `[*]` has semantics "all if any" meaning zero or more (i.e. all)
          #   depending on whether the Group Room had audio tracks.
          # @param [String] audio_sources_excluded An array of audio sources to exclude from
          #   the Composition Hook. Any new Composition triggered by the Composition Hook
          #   shall include all audio sources specified in `AudioSources` except for the ones
          #   specified in `AudioSourcesExcluded`. This parameter may include zero or more
          #   Track names. These can be specified using wildcards (e.g. `student*`).
          # @param [Boolean] trim When activated, clips all the intervals where there is no
          #   active media in the Compositions triggered by the Composition Hook. This results
          #   in shorter compositions in cases when the Room was created but no Participant
          #   joined for some time, or if all the Participants left the room and joined at a
          #   later stage, as those gaps will be removed. You can find further information in
          #   the [Specifying Video
          #   Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) section. Defaults to `true`.
          # @param [composition_hook.Format] format Container format of the Composition
          #   media files created by the Composition Hook. Can be any of the following: `mp4`,
          #   `webm`. The use of `mp4` or `webm` makes mandatory the specification of
          #   `AudioSources` and/or one `VideoLayout` element containing a valid
          #   `video_sources` list, otherwise an error is fired. Defaults to `webm`.
          # @param [String] resolution A string representing the number of pixels for rows
          #   (width) and columns (height) of the generated composed video. This string must
          #   have the format `{width}x{height}`. This parameter must comply with the
          #   following constraints: `width >= 16 && width <= 1280`, `height >= 16 && height
          #   <= 1280`, `width * height <= 921,600`. Typical values are: HD = `1280x720`, PAL
          #   = `1024x576`, VGA = `640x480`, CIF = `320x240`. Note that the `Resolution`
          #   implicitly imposes an aspect ratio to the resulting composition. When the
          #   original video tracks get constrained by this aspect ratio they are scaled-down
          #   to fit. You can find detailed information in the [Specifying Video
          #   Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) section. Defaults to `640x480`.
          # @param [String] status_callback A URL that Twilio sends asynchronous webhook
          #   requests to on every composition event. If not provided, status callback events
          #   will not be dispatched.
          # @param [String] status_callback_method HTTP method Twilio should use when
          #   requesting the above URL. Defaults to `POST`.
          # @return [CompositionHookInstance] Updated CompositionHookInstance
          def update(friendly_name: nil, enabled: :unset, video_layout: :unset, audio_sources: :unset, audio_sources_excluded: :unset, trim: :unset, format: :unset, resolution: :unset, status_callback: :unset, status_callback_method: :unset)
            data = Twilio::Values.of({
                'FriendlyName' => friendly_name,
                'Enabled' => enabled,
                'VideoLayout' => Twilio.serialize_object(video_layout),
                'AudioSources' => Twilio.serialize_list(audio_sources) { |e| e },
                'AudioSourcesExcluded' => Twilio.serialize_list(audio_sources_excluded) { |e| e },
                'Trim' => trim,
                'Format' => format,
                'Resolution' => resolution,
                'StatusCallback' => status_callback,
                'StatusCallbackMethod' => status_callback_method,
            })

            payload = @version.update(
                'POST',
                @uri,
                data: data,
            )

            CompositionHookInstance.new(@version, payload, sid: @solution[:sid], )
          end

          ##
          # Provide a user friendly representation
          def to_s
            context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
            "#<Twilio.Video.V1.CompositionHookContext #{context}>"
          end

          ##
          # Provide a detailed, user friendly representation
          def inspect
            context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
            "#<Twilio.Video.V1.CompositionHookContext #{context}>"
          end
        end

        ##
        # PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
        class CompositionHookInstance < InstanceResource
          ##
          # Initialize the CompositionHookInstance
          # @param [Version] version Version that contains the resource
          # @param [Hash] payload payload that contains response from Twilio
          # @param [String] sid The Composition Hook Sid that uniquely identifies the
          #   Composition Hook to fetch.
          # @return [CompositionHookInstance] CompositionHookInstance
          def initialize(version, payload, sid: nil)
            super(version)

            # Marshaled Properties
            @properties = {
                'account_sid' => payload['account_sid'],
                'friendly_name' => payload['friendly_name'],
                'enabled' => payload['enabled'],
                'date_created' => Twilio.deserialize_iso8601_datetime(payload['date_created']),
                'date_updated' => payload['date_updated'],
                'sid' => payload['sid'],
                'audio_sources' => payload['audio_sources'],
                'audio_sources_excluded' => payload['audio_sources_excluded'],
                'video_layout' => payload['video_layout'],
                'resolution' => payload['resolution'],
                'trim' => payload['trim'],
                'format' => payload['format'],
                'status_callback' => payload['status_callback'],
                'status_callback_method' => payload['status_callback_method'],
                'url' => payload['url'],
            }

            # Context
            @instance_context = nil
            @params = {'sid' => sid || @properties['sid'], }
          end

          ##
          # Generate an instance context for the instance, the context is capable of
          # performing various actions.  All instance actions are proxied to the context
          # @return [CompositionHookContext] CompositionHookContext for this CompositionHookInstance
          def context
            unless @instance_context
              @instance_context = CompositionHookContext.new(@version, @params['sid'], )
            end
            @instance_context
          end

          ##
          # @return [String] Twilio Account SID.
          def account_sid
            @properties['account_sid']
          end

          ##
          # @return [String] Friendly name of the Composition Hook to be shown in the console.
          def friendly_name
            @properties['friendly_name']
          end

          ##
          # @return [Boolean] Boolean flag indicating if the Composition Hook is active.
          def enabled
            @properties['enabled']
          end

          ##
          # @return [Time] Date when the Composition Hook Resource was created.
          def date_created
            @properties['date_created']
          end

          ##
          # @return [String] Date when the Composition Hook was last updated.
          def date_updated
            @properties['date_updated']
          end

          ##
          # @return [String] A 34-character string that uniquely identifies this Composition Hook.
          def sid
            @properties['sid']
          end

          ##
          # @return [String] A list of audio sources related to this Composition Hook.
          def audio_sources
            @properties['audio_sources']
          end

          ##
          # @return [String] A list of audio sources excluded related to this Composition Hook.
          def audio_sources_excluded
            @properties['audio_sources_excluded']
          end

          ##
          # @return [Hash] The JSON video layout description.
          def video_layout
            @properties['video_layout']
          end

          ##
          # @return [String] Pixel resolution of the composed video.
          def resolution
            @properties['resolution']
          end

          ##
          # @return [Boolean] Boolean flag for clipping intervals that have no media.
          def trim
            @properties['trim']
          end

          ##
          # @return [composition_hook.Format] The file format for the Compositions triggered by the Composition Hook.
          def format
            @properties['format']
          end

          ##
          # @return [String] A URL that Twilio sends asynchronous webhook requests to on every composition event.
          def status_callback
            @properties['status_callback']
          end

          ##
          # @return [String] HTTP method Twilio should use when requesting the above URL.
          def status_callback_method
            @properties['status_callback_method']
          end

          ##
          # @return [String] The absolute URL for this resource.
          def url
            @properties['url']
          end

          ##
          # Fetch a CompositionHookInstance
          # @return [CompositionHookInstance] Fetched CompositionHookInstance
          def fetch
            context.fetch
          end

          ##
          # Deletes the CompositionHookInstance
          # @return [Boolean] true if delete succeeds, false otherwise
          def delete
            context.delete
          end

          ##
          # Update the CompositionHookInstance
          # @param [String] friendly_name Friendly name of the Composition Hook to be shown
          #   in the console, must be unique per account and up to 100 characters.
          # @param [Boolean] enabled Boolean flag indicating if the Composition Hook is
          #   active. Possible values are `true` or `false`. When `true`, the Composition Hook
          #   will be triggered for every completed Group Room on this account. When `false`,
          #   the Composition Hook never triggers.
          # @param [Hash] video_layout A JSON object defining the video layout of the
          #   Composition Hook in terms of regions. See the section [Specifying Video
          #   Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) for further information.
          # @param [String] audio_sources An array of audio sources to merge. All the
          #   specified sources must belong to the same Group Room. It can include zero or
          #   more Track names. These can be specified using wildcards (e.g. `student*`). The
          #   use of `[*]` has semantics "all if any" meaning zero or more (i.e. all)
          #   depending on whether the Group Room had audio tracks.
          # @param [String] audio_sources_excluded An array of audio sources to exclude from
          #   the Composition Hook. Any new Composition triggered by the Composition Hook
          #   shall include all audio sources specified in `AudioSources` except for the ones
          #   specified in `AudioSourcesExcluded`. This parameter may include zero or more
          #   Track names. These can be specified using wildcards (e.g. `student*`).
          # @param [Boolean] trim When activated, clips all the intervals where there is no
          #   active media in the Compositions triggered by the Composition Hook. This results
          #   in shorter compositions in cases when the Room was created but no Participant
          #   joined for some time, or if all the Participants left the room and joined at a
          #   later stage, as those gaps will be removed. You can find further information in
          #   the [Specifying Video
          #   Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) section. Defaults to `true`.
          # @param [composition_hook.Format] format Container format of the Composition
          #   media files created by the Composition Hook. Can be any of the following: `mp4`,
          #   `webm`. The use of `mp4` or `webm` makes mandatory the specification of
          #   `AudioSources` and/or one `VideoLayout` element containing a valid
          #   `video_sources` list, otherwise an error is fired. Defaults to `webm`.
          # @param [String] resolution A string representing the number of pixels for rows
          #   (width) and columns (height) of the generated composed video. This string must
          #   have the format `{width}x{height}`. This parameter must comply with the
          #   following constraints: `width >= 16 && width <= 1280`, `height >= 16 && height
          #   <= 1280`, `width * height <= 921,600`. Typical values are: HD = `1280x720`, PAL
          #   = `1024x576`, VGA = `640x480`, CIF = `320x240`. Note that the `Resolution`
          #   implicitly imposes an aspect ratio to the resulting composition. When the
          #   original video tracks get constrained by this aspect ratio they are scaled-down
          #   to fit. You can find detailed information in the [Specifying Video
          #   Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) section. Defaults to `640x480`.
          # @param [String] status_callback A URL that Twilio sends asynchronous webhook
          #   requests to on every composition event. If not provided, status callback events
          #   will not be dispatched.
          # @param [String] status_callback_method HTTP method Twilio should use when
          #   requesting the above URL. Defaults to `POST`.
          # @return [CompositionHookInstance] Updated CompositionHookInstance
          def update(friendly_name: nil, enabled: :unset, video_layout: :unset, audio_sources: :unset, audio_sources_excluded: :unset, trim: :unset, format: :unset, resolution: :unset, status_callback: :unset, status_callback_method: :unset)
            context.update(
                friendly_name: friendly_name,
                enabled: enabled,
                video_layout: video_layout,
                audio_sources: audio_sources,
                audio_sources_excluded: audio_sources_excluded,
                trim: trim,
                format: format,
                resolution: resolution,
                status_callback: status_callback,
                status_callback_method: status_callback_method,
            )
          end

          ##
          # Provide a user friendly representation
          def to_s
            values = @params.map{|k, v| "#{k}: #{v}"}.join(" ")
            "<Twilio.Video.V1.CompositionHookInstance #{values}>"
          end

          ##
          # Provide a detailed, user friendly representation
          def inspect
            values = @properties.map{|k, v| "#{k}: #{v}"}.join(" ")
            "<Twilio.Video.V1.CompositionHookInstance #{values}>"
          end
        end
      end
    end
  end
end