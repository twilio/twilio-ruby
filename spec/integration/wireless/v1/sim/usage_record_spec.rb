##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

require 'spec_helper.rb'

describe 'UsageRecord' do
  it "can read" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.wireless.v1.sims('DEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') \
                         .usage_records.list()
    }.to raise_exception(Twilio::REST::TwilioError)

    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'get',
        url: 'https://wireless.twilio.com/v1/Sims/DEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/UsageRecords',
    ))).to eq(true)
  end

  it "receives fetch responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "usage_records": [
              {
                  "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "commands": {
                      "billing_units": "USD",
                      "billed": 0,
                      "total": 3,
                      "from_sim": 1,
                      "to_sim": 2,
                      "home": {
                          "billing_units": "USD",
                          "billed": 0,
                          "total": 3,
                          "from_sim": 1,
                          "to_sim": 2
                      },
                      "national_roaming": {
                          "billing_units": "USD",
                          "billed": 0,
                          "total": 0,
                          "from_sim": 0,
                          "to_sim": 0
                      },
                      "international_roaming": []
                  },
                  "data": {
                      "billing_units": "USD",
                      "billed": 0.35,
                      "total": 3494609,
                      "upload": 731560,
                      "download": 2763049,
                      "units": "bytes",
                      "home": {
                          "billing_units": "USD",
                          "billed": 0.35,
                          "total": 3494609,
                          "upload": 731560,
                          "download": 2763049,
                          "units": "bytes"
                      },
                      "national_roaming": {
                          "billing_units": "USD",
                          "billed": 0,
                          "total": 0,
                          "upload": 0,
                          "download": 0,
                          "units": "bytes"
                      },
                      "international_roaming": []
                  },
                  "sim_sid": "DEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "period": {
                      "start": "2015-07-30T20:00:00Z",
                      "end": "2015-07-30T20:00:00Z"
                  }
              },
              {
                  "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "commands": {},
                  "data": {},
                  "sim_sid": "DEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "period": {}
              }
          ],
          "meta": {
              "first_page_url": "https://wireless.twilio.com/v1/Sims/DEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/UsageRecords?Start=2015-07-30T20%3A00%3A00Z&End=2015-07-30T20%3A00%3A00Z&PageSize=50&Page=0",
              "key": "usage_records",
              "next_page_url": null,
              "page": 0,
              "page_size": 50,
              "previous_page_url": null,
              "url": "https://wireless.twilio.com/v1/Sims/DEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/UsageRecords?Start=2015-07-30T20%3A00%3A00Z&End=2015-07-30T20%3A00%3A00Z&PageSize=50&Page=0"
          }
      }
      ]
    ))

    actual = @client.wireless.v1.sims('DEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') \
                                .usage_records.list()

    expect(actual).to_not eq(nil)
  end
end