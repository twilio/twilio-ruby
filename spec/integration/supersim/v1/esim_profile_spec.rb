##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

require 'spec_helper.rb'

describe 'EsimProfile' do
  it "can create" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.supersim.v1.esim_profiles.create(eid: 'eid')
    }.to raise_exception(Twilio::REST::TwilioError)

    values = {'Eid' => 'eid', }
    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'post',
        url: 'https://supersim.twilio.com/v1/ESimProfiles',
        data: values,
    ))).to eq(true)
  end

  it "receives create_default_smdp responses" do
    @holodeck.mock(Twilio::Response.new(
        201,
      %q[
      {
          "sid": "HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "iccid": null,
          "sim_sid": null,
          "status": "reserving",
          "eid": "89049032005008882600033489aaaaaa",
          "smdp_plus_address": null,
          "error_code": null,
          "error_message": null,
          "date_created": "2020-09-01T20:00:00Z",
          "date_updated": "2020-09-01T20:00:00Z",
          "url": "https://supersim.twilio.com/v1/ESimProfiles/HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
      }
      ]
    ))

    actual = @client.supersim.v1.esim_profiles.create(eid: 'eid')

    expect(actual).to_not eq(nil)
  end

  it "receives create_with_callback responses" do
    @holodeck.mock(Twilio::Response.new(
        201,
      %q[
      {
          "sid": "HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "iccid": null,
          "sim_sid": null,
          "status": "reserving",
          "eid": "89049032005008882600033489aaaaaa",
          "smdp_plus_address": null,
          "error_code": null,
          "error_message": null,
          "date_created": "2020-09-01T20:00:00Z",
          "date_updated": "2020-09-01T20:00:00Z",
          "url": "https://supersim.twilio.com/v1/ESimProfiles/HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
      }
      ]
    ))

    actual = @client.supersim.v1.esim_profiles.create(eid: 'eid')

    expect(actual).to_not eq(nil)
  end

  it "can fetch" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.supersim.v1.esim_profiles('HPXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX').fetch()
    }.to raise_exception(Twilio::REST::TwilioError)

    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'get',
        url: 'https://supersim.twilio.com/v1/ESimProfiles/HPXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',
    ))).to eq(true)
  end

  it "receives fetch responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "sid": "HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "iccid": "8988307aaaaaaaaaaaaa",
          "sim_sid": "HSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "status": "available",
          "eid": "89049032005008882600033489aaaaaa",
          "smdp_plus_address": "https://sm-dp-plus.twilio.com",
          "error_code": null,
          "error_message": null,
          "date_created": "2020-09-01T20:00:00Z",
          "date_updated": "2020-09-01T20:00:00Z",
          "url": "https://supersim.twilio.com/v1/ESimProfiles/HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
      }
      ]
    ))

    actual = @client.supersim.v1.esim_profiles('HPXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX').fetch()

    expect(actual).to_not eq(nil)
  end

  it "can read" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.supersim.v1.esim_profiles.list()
    }.to raise_exception(Twilio::REST::TwilioError)

    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'get',
        url: 'https://supersim.twilio.com/v1/ESimProfiles',
    ))).to eq(true)
  end

  it "receives read_all responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "esim_profiles": [
              {
                  "sid": "HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "iccid": "8988307aaaaaaaaaaaaa",
                  "sim_sid": "HSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "status": "available",
                  "eid": "89049032005008882600033489aaaaaa",
                  "smdp_plus_address": "https://sm-dp-plus.twilio.com",
                  "error_code": null,
                  "error_message": null,
                  "date_created": "2020-09-01T20:00:00Z",
                  "date_updated": "2020-09-01T20:00:00Z",
                  "url": "https://supersim.twilio.com/v1/ESimProfiles/HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
              }
          ],
          "meta": {
              "first_page_url": "https://supersim.twilio.com/v1/ESimProfiles?PageSize=50&Page=0",
              "key": "esim_profiles",
              "next_page_url": null,
              "page": 0,
              "page_size": 50,
              "previous_page_url": null,
              "url": "https://supersim.twilio.com/v1/ESimProfiles?PageSize=50&Page=0"
          }
      }
      ]
    ))

    actual = @client.supersim.v1.esim_profiles.list()

    expect(actual).to_not eq(nil)
  end

  it "receives read_by_eid responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "esim_profiles": [
              {
                  "sid": "HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "iccid": "8988307aaaaaaaaaaaaa",
                  "sim_sid": "HSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "status": "available",
                  "eid": "89049032005008882600033489aaaaaa",
                  "smdp_plus_address": "https://sm-dp-plus.twilio.com",
                  "error_code": null,
                  "error_message": null,
                  "date_created": "2020-09-01T20:00:00Z",
                  "date_updated": "2020-09-01T20:00:00Z",
                  "url": "https://supersim.twilio.com/v1/ESimProfiles/HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
              }
          ],
          "meta": {
              "first_page_url": "https://supersim.twilio.com/v1/ESimProfiles?Eid=89049032005008882600033489aaaaaa&PageSize=50&Page=0",
              "key": "esim_profiles",
              "next_page_url": null,
              "page": 0,
              "page_size": 50,
              "previous_page_url": null,
              "url": "https://supersim.twilio.com/v1/ESimProfiles?Eid=89049032005008882600033489aaaaaa&PageSize=50&Page=0"
          }
      }
      ]
    ))

    actual = @client.supersim.v1.esim_profiles.list()

    expect(actual).to_not eq(nil)
  end

  it "receives read_by_sim_sid responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "esim_profiles": [
              {
                  "sid": "HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "iccid": "8988307aaaaaaaaaaaaa",
                  "sim_sid": "HSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "status": "available",
                  "eid": "89049032005008882600033489aaaaaa",
                  "smdp_plus_address": "https://sm-dp-plus.twilio.com",
                  "error_code": null,
                  "error_message": null,
                  "date_created": "2020-09-01T20:00:00Z",
                  "date_updated": "2020-09-01T20:00:00Z",
                  "url": "https://supersim.twilio.com/v1/ESimProfiles/HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
              }
          ],
          "meta": {
              "first_page_url": "https://supersim.twilio.com/v1/ESimProfiles?SimSid=HSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&PageSize=50&Page=0",
              "key": "esim_profiles",
              "next_page_url": null,
              "page": 0,
              "page_size": 50,
              "previous_page_url": null,
              "url": "https://supersim.twilio.com/v1/ESimProfiles?SimSid=HSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&PageSize=50&Page=0"
          }
      }
      ]
    ))

    actual = @client.supersim.v1.esim_profiles.list()

    expect(actual).to_not eq(nil)
  end

  it "receives read_by_status responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "esim_profiles": [
              {
                  "sid": "HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "iccid": "8988307aaaaaaaaaaaaa",
                  "sim_sid": "HSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "status": "downloaded",
                  "eid": "89049032005008882600033489aaaaaa",
                  "smdp_plus_address": "https://sm-dp-plus.twilio.com",
                  "error_code": null,
                  "error_message": null,
                  "date_created": "2020-09-01T20:00:00Z",
                  "date_updated": "2020-09-01T20:00:00Z",
                  "url": "https://supersim.twilio.com/v1/ESimProfiles/HPaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
              }
          ],
          "meta": {
              "first_page_url": "https://supersim.twilio.com/v1/ESimProfiles?Status=downloaded&PageSize=50&Page=0",
              "key": "esim_profiles",
              "next_page_url": null,
              "page": 0,
              "page_size": 50,
              "previous_page_url": null,
              "url": "https://supersim.twilio.com/v1/ESimProfiles?Status=downloaded&PageSize=50&Page=0"
          }
      }
      ]
    ))

    actual = @client.supersim.v1.esim_profiles.list()

    expect(actual).to_not eq(nil)
  end
end