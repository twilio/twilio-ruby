##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

require 'spec_helper.rb'

describe 'BrandsInformation' do
  it "can fetch" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.preview.trusted_comms.brands_information().fetch(if_none_match: 'if_none_match')
    }.to raise_exception(Twilio::REST::TwilioError)

    headers = {'If-None-Match' => 'if_none_match', }
    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'get',
        url: 'https://preview.twilio.com/TrustedComms/BrandsInformation',
        headers: headers,
    ))).to eq(true)
  end

  it "receives fetch_results_with_etag responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "update_time": "2020-05-19T19:47:51Z",
          "file_link": "https://www.twilio.com",
          "file_link_ttl_in_seconds": "900",
          "url": "https://preview.twilio.com/TrustedComms/BrandsInformation"
      }
      ]
    ))

    actual = @client.preview.trusted_comms.brands_information().fetch()

    expect(actual).to_not eq(nil)
  end
end