##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

require 'spec_helper.rb'

describe 'RestoreAssistant' do
  it "can update" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.autopilot.v1.restore_assistant.update(assistant: 'UAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
    }.to raise_exception(Twilio::REST::TwilioError)

    values = {'Assistant' => 'UAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', }
    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'post',
        url: 'https://autopilot.twilio.com/v1/Assistants/Restore',
        data: values,
    ))).to eq(true)
  end

  it "receives update responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "sid": "UAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "date_created": "2017-07-04T08:34:00Z",
          "date_updated": "2017-07-04T08:34:00Z",
          "unique_name": "so-so-unique",
          "friendly_name": "so so friendly",
          "needs_model_build": false,
          "latest_model_build_sid": null,
          "log_queries": true,
          "development_stage": "in-development",
          "callback_url": "https://example.com/callback_url",
          "callback_events": "model_build_completed model_build_failed"
      }
      ]
    ))

    actual = @client.autopilot.v1.restore_assistant.update(assistant: 'UAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')

    expect(actual).to_not eq(nil)
  end
end