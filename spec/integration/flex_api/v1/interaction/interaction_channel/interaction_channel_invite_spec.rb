##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

require 'spec_helper.rb'

describe 'InteractionChannelInvite' do
  it "can create" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.flex_api.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') \
                         .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') \
                         .invites.create(routing: {})
    }.to raise_exception(Twilio::REST::TwilioError)

    values = {'Routing' => Twilio.serialize_object({}), }
    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'post',
        url: 'https://flex-api.twilio.com/v1/Interactions/KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Channels/UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Invites',
        data: values,
    ))).to eq(true)
  end

  it "receives create responses" do
    @holodeck.mock(Twilio::Response.new(
        201,
      %q[
      {
          "sid": "KGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "channel_sid": "UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1",
          "interaction_sid": "KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "routing": {
              "properties": {
                  "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "workspace_sid": "WSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "sid": "WTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "date_created": 1634845217,
                  "date_updated": 1634845217,
                  "attributes": "{\\"customerAddress\\":\\"customer email address\\",\\"conversationSid\\":\\"UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1\\",\\"customerName\\":\\"customer name\\"}",
                  "assignment_status": "pending",
                  "workflow_sid": "WWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "workflow_name": "Default Fifo Workflow",
                  "queue_sid": "WQaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "queue_name": "Sample Queue",
                  "priority": 0,
                  "age": 0,
                  "reason": null,
                  "timeout": 86400,
                  "assignmentCounter": 0,
                  "task_channel_sid": "TCaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "task_channel_unique_name": "default",
                  "routing_target": "WKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "task_queue_entered_date": 1634845217,
                  "age_in_queue": 0,
                  "addons": "{}"
              }
          },
          "url": "https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Invites/KGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
      }
      ]
    ))

    actual = @client.flex_api.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') \
                                .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') \
                                .invites.create(routing: {})

    expect(actual).to_not eq(nil)
  end

  it "can read" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.flex_api.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') \
                         .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') \
                         .invites.list()
    }.to raise_exception(Twilio::REST::TwilioError)

    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'get',
        url: 'https://flex-api.twilio.com/v1/Interactions/KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Channels/UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Invites',
    ))).to eq(true)
  end

  it "receives read responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "invites": [
              {
                  "sid": "KGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1",
                  "channel_sid": "UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1",
                  "interaction_sid": "KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "routing": {
                      "properties": {
                          "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "workspace_sid": "WSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "sid": "WTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "date_created": 1634845217,
                          "date_updated": 1634845217,
                          "attributes": "{\\"customerAddress\\":\\"customer email address\\",\\"conversationSid\\":\\"UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1\\",\\"customerName\\":\\"customer name\\"}",
                          "assignment_status": "pending",
                          "workflow_sid": "WWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "workflow_name": "Default Fifo Workflow",
                          "queue_sid": "WQaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "queue_name": "Sample Queue",
                          "priority": 0,
                          "age": 0,
                          "reason": null,
                          "timeout": 86400,
                          "assignmentCounter": 0,
                          "task_channel_sid": "TCaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "task_channel_unique_name": "default",
                          "routing_target": "WKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "task_queue_entered_date": 1634845217,
                          "age_in_queue": 0,
                          "addons": "{}"
                      }
                  },
                  "url": "https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Invites/KGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1"
              },
              {
                  "sid": "KGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2",
                  "channel_sid": "UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1",
                  "interaction_sid": "KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "routing": {
                      "properties": {
                          "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "workspace_sid": "WSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "sid": "WTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "date_created": 1634845217,
                          "date_updated": 1634845217,
                          "attributes": "{\\"customerAddress\\":\\"customer email address\\",\\"conversationSid\\":\\"UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1\\",\\"customerName\\":\\"customer name\\"}",
                          "assignment_status": "pending",
                          "workflow_sid": "WWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "workflow_name": "Default Fifo Workflow",
                          "queue_sid": "WQaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "queue_name": "Sample Queue",
                          "priority": 0,
                          "age": 0,
                          "reason": null,
                          "timeout": 86400,
                          "assignmentCounter": 0,
                          "task_channel_sid": "TCaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "task_channel_unique_name": "default",
                          "routing_target": "WKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                          "task_queue_entered_date": 1634845217,
                          "age_in_queue": 0,
                          "addons": "{}"
                      }
                  },
                  "url": "https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Invites/KGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2"
              }
          ],
          "meta": {
              "page": 0,
              "page_size": 50,
              "first_page_url": "https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Invites?PageSize=50&Page=0",
              "previous_page_url": null,
              "url": "https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Invites?PageSize=50&Page=0",
              "next_page_url": null,
              "key": "invites"
          }
      }
      ]
    ))

    actual = @client.flex_api.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') \
                                .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') \
                                .invites.list()

    expect(actual).to_not eq(nil)
  end
end