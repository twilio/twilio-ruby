##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

require 'spec_helper.rb'

describe 'InsightsSettingsAnswerSets' do
  it "can fetch" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.flex_api.v1.insights_settings_answer_sets.fetch(token: 'token')
    }.to raise_exception(Twilio::REST::TwilioError)

    headers = {'Token' => 'token', }
    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'get',
        url: 'https://flex-api.twilio.com/v1/Insights/QM/Settings/AnswerSets',
        headers: headers,
    ))).to eq(true)
  end

  it "receives read responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "url": "https://flex-api.twilio.com/v1/Insights/QM/Settings/AnswerSets",
          "answer_sets": [
              {
                  "category_id": "1a8cac56-826c-4f85-ac14-9104811cf184",
                  "id": "a6a8a54f-5305-4aec-b92c-a6e429932f58",
                  "name": "Yes, No",
                  "sort": 0,
                  "type": "select",
                  "answers": [
                      {
                          "description": "Yes.",
                          "id": "4e34f701-8206-4670-b376-c9fe26bb3ca3",
                          "name": "Yes",
                          "score": 100,
                          "sort": 0
                      },
                      {
                          "description": "No or a very poor.",
                          "id": "5e926651-fa5d-4aba-86e1-8440bb8faa6c",
                          "name": "No",
                          "score": 0,
                          "sort": 1
                      }
                  ]
              },
              {
                  "category_id": "1a8cac56-826c-4f85-ac14-9104811cf184",
                  "id": "675e8803-e7ca-4002-97f6-a29490450b1b",
                  "name": "Good, Poor",
                  "sort": 1,
                  "type": "select",
                  "answers": [
                      {
                          "description": "Good.",
                          "id": "5aa6c6c0-05cf-4952-b9f9-9fdbe18cc79d",
                          "name": "Good",
                          "score": 100,
                          "sort": 0
                      },
                      {
                          "description": "Poor.",
                          "id": "d19f1c36-8331-44cc-9944-e94cb39e35e9",
                          "name": "Poor",
                          "score": 0,
                          "sort": 1
                      }
                  ]
              }
          ],
          "answer_set_categories": [
              {
                  "id": "1a8cac56-826c-4f85-ac14-9104811cf184",
                  "name": "Two Options",
                  "sort": 1
              },
              {
                  "id": "10c44902-0e6e-46b6-9378-d4665348b4b7",
                  "name": "Three Options",
                  "sort": 2
              },
              {
                  "id": "10c44902-0e6e-46b6-9378-d4665348b4b8",
                  "name": "Rating",
                  "sort": 3
              }
          ],
          "not_applicable": {
              "description": "Not applicable for this call",
              "id": "8dc58ae1-16ae-4e17-a357-799d06230fa3",
              "name": "N/A",
              "score": 0,
              "sort": 0
          }
      }
      ]
    ))

    actual = @client.flex_api.v1.insights_settings_answer_sets.fetch()

    expect(actual).to_not eq(nil)
  end
end