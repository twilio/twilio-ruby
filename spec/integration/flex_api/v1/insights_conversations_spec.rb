##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

require 'spec_helper.rb'

describe 'InsightsConversations' do
  it "can read" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.flex_api.v1.insights_conversations.list(token: 'token')
    }.to raise_exception(Twilio::REST::TwilioError)

    headers = {'Token' => 'token', }
    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'get',
        url: 'https://flex-api.twilio.com/v1/Insights/Conversations',
        headers: headers,
    ))).to eq(true)
  end

  it "receives read_empty responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "conversations": [],
          "meta": {
              "page": 0,
              "page_size": 50,
              "first_page_url": "https://flex-api.twilio.com/v1/Insights/Conversations?SegmentId=02dd8a65-c9e3-550b-9e98-5b11abb9b3a4&PageSize=50&Page=0",
              "previous_page_url": null,
              "url": "https://flex-api.twilio.com/v1/Insights/Conversations?SegmentId=02dd8a65-c9e3-550b-9e98-5b11abb9b3a4&PageSize=50&Page=0",
              "next_page_url": null,
              "key": "conversations"
          }
      }
      ]
    ))

    actual = @client.flex_api.v1.insights_conversations.list()

    expect(actual).to_not eq(nil)
  end

  it "receives read_full responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "conversations": [
              {
                  "account_id": "76e4c1c3-6f93-5d08-ae66-aad4b9092f2d",
                  "conversation_id": "2cb2452a-c6d9-564d-b285-b5404f073031",
                  "segment_count": 2,
                  "segments": [
                      {
                          "segment_id": "02dd8a65-c9e3-550b-9e98-5b11abb9b3a4",
                          "order": 0,
                          "offset": 1.542,
                          "talk_time": 18,
                          "timestamp": "2022-05-11T16:02:27.659Z",
                          "agent_name": "First Agent"
                      },
                      {
                          "segment_id": "02dd8a65-c9e3-550b-9e98-5b11abb9b3a5",
                          "order": 0,
                          "offset": 1.211,
                          "talk_time": 10,
                          "timestamp": "2022-05-21T16:02:27.659Z",
                          "agent_name": "Second Agent"
                      }
                  ]
              }
          ],
          "meta": {
              "page": 0,
              "page_size": 50,
              "first_page_url": "https://flex-api.twilio.com/v1/Insights/Conversations?SegmentId=02dd8a65-c9e3-550b-9e98-5b11abb9b3a4&PageSize=50&Page=0",
              "previous_page_url": null,
              "url": "https://flex-api.twilio.com/v1/Insights/Conversations?SegmentId=02dd8a65-c9e3-550b-9e98-5b11abb9b3a4&PageSize=50&Page=0",
              "next_page_url": null,
              "key": "conversations"
          }
      }
      ]
    ))

    actual = @client.flex_api.v1.insights_conversations.list()

    expect(actual).to_not eq(nil)
  end
end