##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

require 'spec_helper.rb'

describe 'InsightsAssessmentsComment' do
  it "can create" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.flex_api.v1.insights_assessments_comment.create(category_id: 'category_id', category_name: 'category_name', comment: 'comment', segment_id: 'segment_id', user_name: 'user_name', user_email: 'user_email', agent_id: 'agent_id', offset: '-0.0300', token: 'token')
    }.to raise_exception(Twilio::REST::TwilioError)

    values = {
        'CategoryId' => 'category_id',
        'CategoryName' => 'category_name',
        'Comment' => 'comment',
        'SegmentId' => 'segment_id',
        'UserName' => 'user_name',
        'UserEmail' => 'user_email',
        'AgentId' => 'agent_id',
        'Offset' => '-0.0300',
    }
    headers = {'Token' => 'token', }
    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'post',
        url: 'https://flex-api.twilio.com/v1/Insights/QM/Assessments/Comments',
        data: values,
        headers: headers,
    ))).to eq(true)
  end

  it "receives create responses" do
    @holodeck.mock(Twilio::Response.new(
        201,
      %q[
      {
          "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "assessment_id": "123",
          "offset": "0.0",
          "report": true,
          "weight": "1",
          "agent_id": "5d80ee80-7608-55df-b2b2-5ab5608b9831",
          "segment_id": "0105be7a-9b87-51f1-8df8-aa74ddb9c4a7",
          "user_name": "Linda Houghton",
          "user_email": "linda.houghton@vacasa.com",
          "timestamp": "1657329694199",
          "comment": {
              "comment": "log0zu0268",
              "category": {
                  "category_id": "c9ba34ca-7174-4dcd-ab3e-91fbb1932f1e",
                  "name": "Good for Training"
              }
          },
          "url": "https://flex-api.twilio.com/v1/Insights/QM/Assessments/Comments/123"
      }
      ]
    ))

    actual = @client.flex_api.v1.insights_assessments_comment.create(category_id: 'category_id', category_name: 'category_name', comment: 'comment', segment_id: 'segment_id', user_name: 'user_name', user_email: 'user_email', agent_id: 'agent_id', offset: '-0.0300')

    expect(actual).to_not eq(nil)
  end

  it "can read" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.flex_api.v1.insights_assessments_comment.list(token: 'token')
    }.to raise_exception(Twilio::REST::TwilioError)

    headers = {'Token' => 'token', }
    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'get',
        url: 'https://flex-api.twilio.com/v1/Insights/QM/Assessments/Comments',
        headers: headers,
    ))).to eq(true)
  end

  it "receives read_by_segment_id responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "comments": [
              {
                  "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "assessment_id": "123",
                  "offset": "0.0",
                  "report": true,
                  "weight": "1",
                  "agent_id": "5d80ee80-7608-55df-b2b2-5ab5608b9831",
                  "segment_id": "0105be7a-9b87-51f1-8df8-aa74ddb9c4a7",
                  "user_name": "Linda Houghton",
                  "user_email": "linda.houghton@vacasa.com",
                  "timestamp": "1657329694199",
                  "comment": {
                      "comment": "log0zu0268",
                      "category": {
                          "category_id": "c9ba34ca-7174-4dcd-ab3e-91fbb1932f1e",
                          "name": "Good for Training"
                      }
                  },
                  "url": "https://flex-api.twilio.com/v1/Insights/QM/Assessments/Comments/123"
              }
          ],
          "meta": {
              "first_page_url": "https://flex-api.twilio.com/v1/Insights/QM/Assessments/Comments?SegmentId=0105be7a-9b87-51f1-8df8-aa74ddb9c4a7&PageSize=50&Page=0",
              "key": "comments",
              "next_page_url": null,
              "page": 0,
              "page_size": 50,
              "previous_page_url": null,
              "url": "https://flex-api.twilio.com/v1/Insights/QM/Assessments/Comments?SegmentId=0105be7a-9b87-51f1-8df8-aa74ddb9c4a7&PageSize=50&Page=0"
          }
      }
      ]
    ))

    actual = @client.flex_api.v1.insights_assessments_comment.list()

    expect(actual).to_not eq(nil)
  end

  it "receives read_by_agent_id responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "comments": [
              {
                  "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                  "assessment_id": "123",
                  "offset": "0.0",
                  "report": true,
                  "weight": "1",
                  "agent_id": "5d80ee80-7608-55df-b2b2-5ab5608b9831",
                  "segment_id": "0105be7a-9b87-51f1-8df8-aa74ddb9c4a7",
                  "user_name": "Linda Houghton",
                  "user_email": "linda.houghton@vacasa.com",
                  "timestamp": "1657329694199",
                  "comment": {
                      "comment": "log0zu0268",
                      "category": {
                          "category_id": "c9ba34ca-7174-4dcd-ab3e-91fbb1932f1e",
                          "name": "Good for Training"
                      }
                  },
                  "url": "https://flex-api.twilio.com/v1/Insights/QM/Assessments/Comments/123"
              }
          ],
          "meta": {
              "first_page_url": "https://flex-api.twilio.com/v1/Insights/QM/Assessments/Comments?AgentId=5d80ee80-7608-55df-b2b2-5ab5608b9831&PageSize=50&Page=0",
              "key": "comments",
              "next_page_url": null,
              "page": 0,
              "page_size": 50,
              "previous_page_url": null,
              "url": "https://flex-api.twilio.com/v1/Insights/QM/Assessments/Comments?AgentId=5d80ee80-7608-55df-b2b2-5ab5608b9831&PageSize=50&Page=0"
          }
      }
      ]
    ))

    actual = @client.flex_api.v1.insights_assessments_comment.list()

    expect(actual).to_not eq(nil)
  end

  it "receives read_empty responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "comments": [],
          "meta": {
              "first_page_url": "https://flex-api.twilio.com/v1/Insights/QM/Assessments/Comments?SegmentId=0105be7a-9b87-51f1-8df8-aa74ddb9c4a7&PageSize=50&Page=0",
              "key": "comments",
              "next_page_url": null,
              "page": 0,
              "page_size": 50,
              "previous_page_url": null,
              "url": "https://flex-api.twilio.com/v1/Insights/QM/Assessments/Comments?SegmentId=0105be7a-9b87-51f1-8df8-aa74ddb9c4a7&PageSize=50&Page=0"
          }
      }
      ]
    ))

    actual = @client.flex_api.v1.insights_assessments_comment.list()

    expect(actual).to_not eq(nil)
  end
end