##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

require 'spec_helper.rb'

describe 'InsightsUserRoles' do
  it "can fetch" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.flex_api.v1.insights_user_roles().fetch(authorization: 'authorization')
    }.to raise_exception(Twilio::REST::TwilioError)

    headers = {'Authorization' => 'authorization', }
    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'get',
        url: 'https://flex-api.twilio.com/v1/Insights/UserRoles',
        headers: headers,
    ))).to eq(true)
  end

  it "receives fetch responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "roles": [
              "wfo.full_access"
          ],
          "url": "https://flex-api.twilio.com/v1/Insights/UserRoles"
      }
      ]
    ))

    actual = @client.flex_api.v1.insights_user_roles().fetch()

    expect(actual).to_not eq(nil)
  end
end